
package it.peng.wr.webservice.protocollo;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProtocolWebService", targetNamespace = "http://protocollo.webservice.wr.peng.it/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProtocolWebService {


    /**
     * 
     * @param ufficioCreatore
     * @param documenti
     * @param assegnatari
     * @param fascicolazioni
     * @param invioPec
     * @param oggetto
     * @param destinatari
     * @param classificazioni
     * @param riferimenti
     * @return
     *     returns it.peng.wr.webservice.protocollo.Risultatoprotocollo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "creaProtocolloInUscita", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.CreaProtocolloInUscita")
    @ResponseWrapper(localName = "creaProtocolloInUscitaResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.CreaProtocolloInUscitaResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/creaProtocolloInUscitaRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/creaProtocolloInUscitaResponse")
    public Risultatoprotocollo creaProtocolloInUscita(
        @WebParam(name = "oggetto", targetNamespace = "")
        String oggetto,
        @WebParam(name = "ufficioCreatore", targetNamespace = "")
        String ufficioCreatore,
        @WebParam(name = "destinatari", targetNamespace = "")
        List<Corrispondente> destinatari,
        @WebParam(name = "assegnatari", targetNamespace = "")
        List<Corrispondente> assegnatari,
        @WebParam(name = "riferimenti", targetNamespace = "")
        List<Riferimento> riferimenti,
        @WebParam(name = "classificazioni", targetNamespace = "")
        List<String> classificazioni,
        @WebParam(name = "fascicolazioni", targetNamespace = "")
        List<String> fascicolazioni,
        @WebParam(name = "invioPec", targetNamespace = "")
        Boolean invioPec,
        @WebParam(name = "documenti", targetNamespace = "")
        List<Documento> documenti);

    /**
     * 
     * @param ufficioCreatore
     * @param documenti
     * @param mittente
     * @param assegnatari
     * @param fascicolazioni
     * @param oggetto
     * @param classificazioni
     * @param riferimenti
     * @return
     *     returns it.peng.wr.webservice.protocollo.Risultatoprotocollo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "creaProtocolloInEntrata", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.CreaProtocolloInEntrata")
    @ResponseWrapper(localName = "creaProtocolloInEntrataResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.CreaProtocolloInEntrataResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/creaProtocolloInEntrataRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/creaProtocolloInEntrataResponse")
    public Risultatoprotocollo creaProtocolloInEntrata(
        @WebParam(name = "oggetto", targetNamespace = "")
        String oggetto,
        @WebParam(name = "mittente", targetNamespace = "")
        Corrispondente mittente,
        @WebParam(name = "ufficioCreatore", targetNamespace = "")
        String ufficioCreatore,
        @WebParam(name = "assegnatari", targetNamespace = "")
        List<Corrispondente> assegnatari,
        @WebParam(name = "riferimenti", targetNamespace = "")
        List<Riferimento> riferimenti,
        @WebParam(name = "classificazioni", targetNamespace = "")
        List<String> classificazioni,
        @WebParam(name = "fascicolazioni", targetNamespace = "")
        List<String> fascicolazioni,
        @WebParam(name = "documenti", targetNamespace = "")
        List<Documento> documenti);

    /**
     * 
     * @param conPecInviate
     * @param conDocumenti
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns it.peng.wr.webservice.protocollo.Protocollo
     * @throws WebServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProtocollo", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetProtocollo")
    @ResponseWrapper(localName = "getProtocolloResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetProtocolloResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getProtocolloRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getProtocolloResponse", fault = {
        @FaultAction(className = WebServiceException_Exception.class, value = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getProtocollo/Fault/WebServiceException")
    })
    public Protocollo getProtocollo(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione,
        @WebParam(name = "conDocumenti", targetNamespace = "")
        Boolean conDocumenti,
        @WebParam(name = "conPecInviate", targetNamespace = "")
        Boolean conPecInviate)
        throws WebServiceException_Exception
    ;

    /**
     * 
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns it.peng.wr.webservice.protocollo.Documento
     * @throws WebServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDocumentoPrincipale", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetDocumentoPrincipale")
    @ResponseWrapper(localName = "getDocumentoPrincipaleResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetDocumentoPrincipaleResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getDocumentoPrincipaleRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getDocumentoPrincipaleResponse", fault = {
        @FaultAction(className = WebServiceException_Exception.class, value = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getDocumentoPrincipale/Fault/WebServiceException")
    })
    public Documento getDocumentoPrincipale(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione)
        throws WebServiceException_Exception
    ;

    /**
     * 
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns java.util.List<it.peng.wr.webservice.protocollo.Documento>
     * @throws WebServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllegati", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetAllegati")
    @ResponseWrapper(localName = "getAllegatiResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetAllegatiResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getAllegatiRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getAllegatiResponse", fault = {
        @FaultAction(className = WebServiceException_Exception.class, value = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getAllegati/Fault/WebServiceException")
    })
    public List<Documento> getAllegati(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione)
        throws WebServiceException_Exception
    ;

    /**
     * 
     * @param idPecInviata
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns java.util.List<it.peng.wr.webservice.protocollo.Ricevuta>
     * @throws WebServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRicevutePEC", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetRicevutePEC")
    @ResponseWrapper(localName = "getRicevutePECResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetRicevutePECResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getRicevutePECRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getRicevutePECResponse", fault = {
        @FaultAction(className = WebServiceException_Exception.class, value = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getRicevutePEC/Fault/WebServiceException")
    })
    public List<Ricevuta> getRicevutePEC(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione,
        @WebParam(name = "idPecInviata", targetNamespace = "")
        String idPecInviata)
        throws WebServiceException_Exception
    ;

    /**
     * 
     * @param idPecInviata
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns java.lang.String
     * @throws WebServiceException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStatoPEC", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetStatoPEC")
    @ResponseWrapper(localName = "getStatoPECResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.GetStatoPECResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getStatoPECRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getStatoPECResponse", fault = {
        @FaultAction(className = WebServiceException_Exception.class, value = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/getStatoPEC/Fault/WebServiceException")
    })
    public String getStatoPEC(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione,
        @WebParam(name = "idPecInviata", targetNamespace = "")
        String idPecInviata)
        throws WebServiceException_Exception
    ;

    /**
     * 
     * @param numeroProtocollo
     * @param dataRegistrazione
     * @return
     *     returns it.peng.wr.webservice.protocollo.Risultatoprotocollo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trasmettiPEC", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.TrasmettiPEC")
    @ResponseWrapper(localName = "trasmettiPECResponse", targetNamespace = "http://protocollo.webservice.wr.peng.it/", className = "it.peng.wr.webservice.protocollo.TrasmettiPECResponse")
    @Action(input = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/trasmettiPECRequest", output = "http://protocollo.webservice.wr.peng.it/ProtocolWebService/trasmettiPECResponse")
    public Risultatoprotocollo trasmettiPEC(
        @WebParam(name = "numeroProtocollo", targetNamespace = "")
        String numeroProtocollo,
        @WebParam(name = "dataRegistrazione", targetNamespace = "")
        String dataRegistrazione);

}
